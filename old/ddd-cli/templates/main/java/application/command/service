package <%= entity.nameSpace.value %>;

import org.springframework.stereotype.Service;
import pe.lacafetalab.pao.shared.domain.bus.event.EventBus;
import pe.lacafetalab.pao.shared.exceptions.BadRequestException;

@Service
public final class <%= className %> {
    private final <%= entity.repository.name %> repository;
    private final EventBus eventBus;

    public <%= className %>(<%= entity.repository.name %> repository, EventBus eventBus) {
        this.repository = repository;
        this.eventBus = eventBus;
    }

    public void execute(<%= strVoProperties %>) {
        <%_ if (templateService == "create") { _%>
        <%= entity.name.value %> <%= entity.name.propertie %> = <%= entity.name.value %>.create(<%= strProperties %>);
        repository.save(<%= entity.name.propertie %>);
        <%_ } _%>
        <%_ if (templateService == "update") { _%>
        <%= entity.name.value %> <%= entity.name.propertie %> = repository.findById(id).orElseThrow(()-> new BadRequestException("404","<%= entity.name.value %> not found"));
        repository.save(<%= entity.name.propertie %>);
        <%_ } _%>
        <%_ if (templateService == "delete") { _%>
        <%= entity.name.value %> <%= entity.name.propertie %> = repository.findById(id).orElseThrow(()-> new BadRequestException("404","<%= entity.name.value %> not found"));
        repository.deleteById(<%= entity.name.propertie %>.id());
        <%_ } _%>
        eventBus.publish(<%= entity.name.propertie %>.pullDomainEvents());
    }
}
