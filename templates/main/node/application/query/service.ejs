import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';

@Injectable()
export class <%= className %> {
  constructor(private repository: <%= aggregate.name.value %>Repository) {}

  public async execute(<%= strVoProperties %>): Promise<void> {
    <%_ if (templateRender == "entity") { _%>
    const <%= aggregate.name.propertie %> = await this.repository.findById(id);
    if (!<%= aggregate.name.propertie %>) {
    throw new NotFoundException(`<%= aggregate.name.value %> with id ${id} not found`);
    }
    return <%= aggregate.name.propertie %>;
    <%_ } _%>
    <%_ if (templateRender == "list") { _%>
    const list<%= aggregate.name.value %> = await this.repository.find();
    return list<%= aggregate.name.value %>;
    <%_ } _%>
    //eventBus.publish(<%= aggregate.name.propertie %>.pullDomainEvents());
  }
}
