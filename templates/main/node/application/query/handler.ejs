import { QueryHandler, IQueryHandler } from '@nestjs/cqrs';
import { <%= classDto %> } from './<%= fileDto %>';
import { <%= classService %> } from './<%= fileService %>';
<%_ properties.forEach(function(e){ _%>
import { <%= e.propertie.className %> } from '../../domain/<%= e.file %>';
<%_ }); _%>
import { <%= classResponse %> } from '../<%= fileResponse %>';

@QueryHandler(<%= classDto %>)
export class <%= className %> implements IQueryHandler<<%= classDto %>> {
  constructor(private service: <%= classService %>) {}

  async execute(dto: <%= classDto %>): Promise<<%= classResponse %>> {
    <%_ properties.forEach(function(e){ _%>
    const <%= e.propertie.name.value %> = new <%= e.propertie.className %>(dto.<%= e.propertie.name.value %>);
    <%_ }); _%>

    return await this.service.execute(<%= strProperties %>);
  }
}
