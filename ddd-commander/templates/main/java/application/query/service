package <%= package %>;

import org.springframework.stereotype.Service;
import <%= packageApplication %>.<%= listEntityResponseClass %>;
import <%= packageApplication %>.<%= entityResponseClass %>;
import <%= packageDomain %>.*;
import pe.lacafetalab.pao.shared.domain.bus.event.EventBus;
import pe.lacafetalab.pao.shared.exceptions.BadRequestException;

import java.util.stream.Collectors;

@Service
public final class <%= className %> {
    private final <%= entityRepositoryClass %> repository;
    private final EventBus eventBus;

    public <%= className %>(<%= entityRepositoryClass %> repository, EventBus eventBus) {
        this.repository = repository;
        this.eventBus = eventBus;
    }

    public <%= serviceClassResponse %> execute(<%= strVoProperties%>) {
        <%_ if (serviceTemplate == "findById") { _%>
        <%= entityClass %> <%= entityClassPropertie %> = repository.findById(id).orElseThrow(()-> new BadRequestException("404","<%= entityClass %> not found"));
        eventBus.publish(<%= entityClassPropertie %>.pullDomainEvents());
        return <%= entityResponseClass %>.fromAggregate(<%= entityClassPropertie %>);
        <%_ } _%>
        <%_ if (serviceTemplate == "searchCriteria") { _%>
        return new <%= listEntityResponseClass %>(
                repository.findAll().stream().map(<%= entityResponseClass %>::fromAggregate).collect(Collectors.toList())
        );
        <%_ } _%>
    }
}
